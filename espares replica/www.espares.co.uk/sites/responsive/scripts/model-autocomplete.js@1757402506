function initModelAutocomplete(
	form,										// HTML selector
	fieldwrapper,						// HTML selector
	field,									// HTML selector
	source,									// API URL. Use %QUERY% if 'field' value should be passed in
	searchBy,								// API key to search by
	returnBy,								// API key to return if selected
	messageNoResults,				// Message to display if no results are found
	messageLoading,					// Message to display when form submit in processing
	pneEnabled,							// 
	pneMessage,							// PNE Message
	pneLink									// PNE URL
	) {

	var fieldwrapper = $(field).closest(fieldwrapper);

	var preventSubmit = false;
	var bestMatch = -1;

	// EasyAutoComplete plugin
	var options = {
		url: function(phrase) {
			$(fieldwrapper).addClass('loading');
			return source.replace('%QUERY%', encodeURIComponent(phrase));
		},
		getValue: searchBy,
		list: {
			onLoadEvent: function() {
				$(fieldwrapper).removeClass('loading');
				bestMatch = $(field).getItemData(0); 
				if (bestMatch == -1) {
					$('.autocomplete-no-results').remove();
					$('.easy-autocomplete-container').prepend(
						'<ul class="autocomplete-no-results focus">' +
						( pneEnabled ? '<li class="pne show"><a href="' + pneLink + '" target="_parent">' + pneMessage + '</a></li>' : '') +
						'</ul>'
					);
					$(fieldwrapper).addClass('no-results');
				} else {
					$(fieldwrapper).removeClass('no-results');
					$('.autocomplete-no-results').remove();
					if (pneEnabled) {
						$('.easy-autocomplete-container ul').append('<li class="pne"><a href="' + pneLink + '" target="_parent">' + pneMessage + '</a></li>');
					};
				}
			},
			onChooseEvent: function() {
				bestMatch = $(field).getSelectedItemData();
				parent.document.location.href = bestMatch[returnBy];
			},
			match: { 
				enabled: false,
				method: function (element, phrase) {
					if (element.indexOf(phrase) === 0) {
						return true;
					} else {
						return false;
					}
				} 
			},
			sort: { enabled: true },
			maxNumberOfElements: 5,
		},
		requestDelay: 800
	};

	function submitted() {
		preventSubmit = true;
		var submitted = '<span class="autocomplete-status submitted">' + messageLoading + '</span>';
		$(field).before(submitted);
	}

	function error() {
		$('.autocomplete-status').removeClass('submitted').addClass('error');
		$('.autocomplete-status').html(messageNoResults);
		
		$(fieldwrapper).addClass('error').removeClass('loading');

		setTimeout(function() {
			$('.autocomplete-status').fadeOut(300, function() {
				$(this).remove();
				preventSubmit = false;
			});
		}, 1000);
	}

	// Add delay, for if the user clicks on the PNE link
	$(field).on('blur', function() {
		setTimeout(function() {
			$('.autocomplete-no-results').removeClass('focus');
		}, 500);
	});
	$(field).on('focus', function() {
		$('.autocomplete-no-results').addClass('focus');
	});

	// If user hovers over PNE link, remove the 'selected' class from autocomplete results
	$(fieldwrapper).on('mouseenter', 'li.pne', function () {
		$(fieldwrapper).find('li.selected').removeClass('selected');
	});

	$(form).on('submit', function() {

		if ($(field).val().length == 0 || preventSubmit) {
			return false;
		}

		$(fieldwrapper).addClass('loading');
		var convertedSearch = $(field).val().toLowerCase().replace(/\W/g, '');

		submitted();

		// Has EasyAutocomplete returned any results?
		if (bestMatch != -1) {
			var convertedResult = bestMatch[searchBy].toLowerCase().replace(/\W/g, '');
			if (convertedSearch == convertedResult) {
				parent.document.location.href = bestMatch[returnBy];
				return false;
			}
		}

		$.getJSON( source.replace('%QUERY%', convertedSearch), function(data) {
			if (data.length > 0) {
				var convertedResult = data[0][searchBy].toLowerCase().replace(/\W/g, '');
				if (convertedSearch == convertedResult) {
					parent.document.location.href = data[0][returnBy];
				} else {
					error();
				}
			} else {
				error();
			}
		})
		.fail(function() {
			error();
		});

		return false;

	});

	$(field).easyAutocomplete(options);

}